---
AWSTemplateFormatVersion: 2010-09-09
Parameters:
  AppName:
    Type: String
    Default: dwc
  Env:
    Type: String
    Default: poc  
Resources:
  DirewolfDataCollectionIoTTopicRule:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IoT::TopicRule"
    DeletionPolicy: "Retain"
    Properties:
      RuleName: !Sub "${AppName}_${Env}_data_collection_iot_rule"
      Tags: []
      TopicRulePayload:
        RuleDisabled: false
        Description: "Grab all GeoJSON data published to this topic."
        AwsIotSqlVersion: "2015-10-08"
        Actions:
        - Lambda:
            FunctionArn:
              Fn::ImportValue:
                !Sub "${AppName}-${Env}-LambdaFunctionCallsigndataupdater"
        Sql: "SELECT * FROM \"aprs/geojson\""
  DirewolfDataCollectionThing:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IoT::Thing"
    DeletionPolicy: "Retain"
    Properties:
      AttributePayload: {}
      ThingName: !Sub "${AppName}_${Env}_data_collection_thing"
  LambdaPermissionFunctioncallsigndataupdater:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Permission"
    DeletionPolicy: "Retain"
    Properties:
      FunctionName:
        Fn::Select:
        - 6
        - Fn::Split:
          - ":"
          - Fn::ImportValue:
              !Sub "${AppName}-${Env}-LambdaFunctionCallsigndataupdater"
      Action: "lambda:InvokeFunction"
      SourceArn:
        Fn::GetAtt:
        - "DirewolfDataCollectionIoTTopicRule"
        - "Arn"
      Principal: "iot.amazonaws.com"
      SourceAccount: !Sub ${AWS::AccountId}
Outputs:
  DirewolfDataCollectionThingArn:
    Value: !GetAtt DirewolfDataCollectionThing.Arn
    Description: The IoT Thing in our stack.
    Export:
      Name: !Sub "${AppName}-${Env}-data-collection-thing"
  DirewolfDataCollectionIoTTopicRulern:
    Value: !GetAtt DirewolfDataCollectionIoTTopicRule.Arn
    Description: The IoT Topic Rule which allows us to collect messages.
    Export:
      Name: !Sub "${AppName}-${Env}-data-collection-iot-rule"