---
AWSTemplateFormatVersion: 2010-09-09
Parameters:
  AppName:
    Type: String
    Default: dwc
  Env:
    Type: String
    Default: poc
  SourceCodeS3BucketName:
    Type: String
    Default: direwolf-data-collector
  AprsMapLambdaLayerFlaskZip:
    Type: String
    Default: flasklayer-v2.zip
  AprsMapLambdaLayerAwsgiZip:
    Type: String
    Default: awsgi-v2.zip
  AprsMapLambdaFunctionZip:
    Type: String
    Default: aprs-map-lambda.zip
Resources:
  AprsMapLambdaLayerFlask:
    Type: AWS::Lambda::LayerVersion
    Properties:
      CompatibleRuntimes:
        - python3.10
      Content:
        S3Bucket: !Ref SourceCodeS3BucketName
        S3Key: !Ref AprsMapLambdaLayerFlaskZip
      Description: !Sub ${AppName}-${Env}-flask-layer
      LayerName: !Sub ${AppName}-${Env}-flask-layer
      LicenseInfo: MIT   
  AprsMapLambdaLayerAwsgi:
    Type: AWS::Lambda::LayerVersion
    Properties:
      CompatibleRuntimes:
        - python3.10
      Content:
        S3Bucket: !Ref SourceCodeS3BucketName
        S3Key: !Ref AprsMapLambdaLayerAwsgiZip
      Description: !Sub ${AppName}-${Env}-awsgi-layer
      LayerName: !Sub ${AppName}-${Env}-awsgi-layer
      LicenseInfo: MIT   
  AprsMapLambdaFunction:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Lambda::Function"
    DeletionPolicy: "Retain"
    Properties:
      MemorySize: 128
      Description: ""
      TracingConfig:
        Mode: "PassThrough"
      Timeout: 3
      RuntimeManagementConfig:
        UpdateRuntimeOn: "Auto"
      Handler: "map.flask_handler"
      Code:
        S3Bucket:
          Ref: "SourceCodeS3BucketName"
        S3Key:
          Ref: "AprsMapLambdaFunctionZip"
      Role:
        Fn::ImportValue: !Sub "${AppName}-${Env}-IAMRoleCallsigndataUpdaterRoleForDirewolf"
      FileSystemConfigs: []
      FunctionName: !Sub "${AppName}-${Env}-aprs-map"
      Runtime: "python3.10"
      PackageType: "Zip"
      LoggingConfig:
        LogFormat: "Text"
        LogGroup: !Sub "/aws/lambda/${AppName}-${Env}-aprs-map"
      RecursiveLoop: "Terminate"
      EphemeralStorage:
        Size: 512
      Environment:
        Variables:
          CALLSIGNTABLE: 
            Fn::ImportValue:
              !Sub "${AppName}-${Env}-DynamoDBTableCallsigndata"
      Layers:
      - !Ref AprsMapLambdaLayerFlask
      - !Ref AprsMapLambdaLayerAwsgi
      Architectures:
      - "x86_64"
  AprsMapLambdaUrl:
    Type: "AWS::Lambda::Url"
    Properties:
      AuthType: NONE
      TargetFunctionArn: !Ref AprsMapLambdaFunction
  AprsMapPermissionForURL:
     Type: AWS::Lambda::Permission
     Properties:
       FunctionName: !Ref AprsMapLambdaFunction
       FunctionUrlAuthType: 'NONE'
       Action: lambda:InvokeFunctionUrl
       Principal: '*'

Outputs:
  AprsMapLambdaFunctionArn:
    Value: !GetAtt AprsMapLambdaFunction.Arn
    Description: AprsMapLambdaFunction arn output
    Export:
      Name: !Sub "${AppName}-${Env}-AprsMapLambdaFunction" 
  AprsMapLambdaLayerAwsgiArn:
    Value: !Ref AprsMapLambdaLayerAwsgi
    Description: AprsMapLambdaLayerAwsgi output
    Export:
      Name: !Sub "${AppName}-${Env}-AprsMapLambdaLayerAwsgi" 
  AprsMapLambdaLayerFlaskArn:
    Value: !Ref AprsMapLambdaLayerFlask
    Description: AprsMapLambdaLayerFlask output
    Export:
      Name: !Sub "${AppName}-${Env}-AprsMapLambdaLayerFlask" 
  AprsMapLambdaUrlExport:
    Value: !GetAtt AprsMapLambdaUrl.FunctionUrl
    Description: Aprs Map URL
    Export:
      Name: !Sub "${AppName}-${Env}-AprsMapURL" 


